name: Benchmarks

on:
  schedule:
    - cron:  '30 21 * * *' # Check at 21:30 every day

jobs:
  Check_Pyccel_Version:
    runs-on: ubuntu-latest
    outputs:
      old_version: ${{ steps.check_version.outputs.old_version }}
      new_version: ${{ steps.check_version.outputs.new_version }}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install pyccel
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
          python -m pip install pyccel
      - name: Check Version
        id: check_version
        run: |
          old_version=$(cat current_version.txt)
          new_version=$(python -c "from pyccel import __version__; print(__version__)")
          echo "old_version=${old_version}" >> $GITHUB_OUTPUT
          echo "new_version=${new_version}" >> $GITHUB_OUTPUT

  Benchmark_37:

    runs-on: ubuntu-latest
    if: ${{ needs.Check_Pyccel_Version.outputs.old_version != needs.Check_Pyccel_Version.outputs.new_version }}
    needs: Check_Pyccel_Version

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.7
        uses: actions/setup-python@v4
        with:
          python-version: 3.7
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Install python dependencies
        run: pip3 install .
      - name: Benchmark
        run: |
          python benchmarks/run_benchmarks.py --pyperf --verbose
          FILE=version_specific_results/pypi_performance_37_${{needs.Check_Pyccel_Version.outputs.new_version }}.md
          echo "### Performance Comparison (as of ${{needs.Check_Pyccel_Version.outputs.new_version }})" > ${FILE}
          cat bench.out >> ${FILE}
          python analysis/plot_results_figures.py ${FILE}
        shell: bash
        working-directory: ./.
      - name: Record Failure
        run: echo "Python 3.7 benchmarks failed!" > version_specific_results/pypi_performance_37.md
        if: ${{ failure() }}
      - name: Add & Commit
        uses: EndBug/add-and-commit@v9
        if: ${{ always() }}
        with:
          message: 'Update performance comparison'
          add: "['version_specific_results/pypi_performance_37_${{needs.Check_Pyccel_Version.outputs.new_version }}.md', 'version_specific_results/pypi_performance_37_compilation.svg', 'version_specific_results/pypi_performance_37_execution.svg']"
          default_author: github_actions
          pull: '--rebase --autostash'

  Benchmark_38:

    runs-on: ubuntu-latest
    if: ${{ needs.Check_Pyccel_Version.outputs.old_version != needs.Check_Pyccel_Version.outputs.new_version }}
    needs: Check_Pyccel_Version

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Install python dependencies
        run: pip3 install .
      - name: Benchmark
        run: |
          python benchmarks/run_benchmarks.py --pyperf --verbose
          FILE=version_specific_results/pypi_performance_38_${{needs.Check_Pyccel_Version.outputs.new_version }}.md
          echo "### Performance Comparison (as of ${{needs.Check_Pyccel_Version.outputs.new_version }})" > ${FILE}
          cat bench.out >> ${FILE}
          python analysis/plot_results_figures.py ${FILE}
        shell: bash
        working-directory: ./.
      - name: Record Failure
        run: echo "Python 3.8 benchmarks failed!" > version_specific_results/pypi_performance_38.md
        if: ${{ failure() }}
      - name: Add & Commit
        if: ${{ always() }}
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update performance comparison'
          add: "['version_specific_results/pypi_performance_38_${{needs.Check_Pyccel_Version.outputs.new_version }}.md', 'version_specific_results/pypi_performance_38_compilation.svg', 'version_specific_results/pypi_performance_38_execution.svg']"
          default_author: github_actions
          pull: '--rebase --autostash'

  Benchmark_39:

    runs-on: ubuntu-latest
    if: ${{ needs.Check_Pyccel_Version.outputs.old_version != needs.Check_Pyccel_Version.outputs.new_version }}
    needs: Check_Pyccel_Version

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Install python dependencies
        run: pip3 install .
      - name: Benchmark
        run: |
          python benchmarks/run_benchmarks.py --pyperf --verbose
          FILE=version_specific_results/pypi_performance_39_${{needs.Check_Pyccel_Version.outputs.new_version }}.md
          echo "### Performance Comparison (as of ${{needs.Check_Pyccel_Version.outputs.new_version }})" > ${FILE}
          cat bench.out >> ${FILE}
          python analysis/plot_results_figures.py ${FILE}
        shell: bash
        working-directory: ./.
      - name: Record Failure
        run: echo "Python 3.9 benchmarks failed!" > version_specific_results/pypi_performance_39.md
        if: ${{ failure() }}
      - name: Add & Commit
        if: ${{ always() }}
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update performance comparison'
          add: "['version_specific_results/pypi_performance_39_${{needs.Check_Pyccel_Version.outputs.new_version }}.md', 'version_specific_results/pypi_performance_39_compilation.svg', 'version_specific_results/pypi_performance_39_execution.svg']"
          default_author: github_actions
          pull: '--rebase --autostash'

  Benchmark_310:

    runs-on: ubuntu-latest
    if: ${{ needs.Check_Pyccel_Version.outputs.old_version != needs.Check_Pyccel_Version.outputs.new_version }}
    needs: Check_Pyccel_Version

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Install python dependencies
        run: pip3 install .
      - name: Benchmark
        run: |
          python benchmarks/run_benchmarks.py --pyperf --verbose
          FILE=version_specific_results/pypi_performance_310_${{needs.Check_Pyccel_Version.outputs.new_version }}.md
          echo "### Performance Comparison (as of ${{needs.Check_Pyccel_Version.outputs.new_version }})" > ${FILE}
          cat bench.out >> ${FILE}
          python analysis/plot_results_figures.py ${FILE}
        shell: bash
        working-directory: ./.
      - name: Record Failure
        run: echo "Python 3.10 benchmarks failed!" > version_specific_results/pypi_performance_310.md
        if: ${{ failure() }}
      - name: Add & Commit
        if: ${{ always() }}
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update performance comparison'
          add: "['version_specific_results/pypi_performance_310_${{needs.Check_Pyccel_Version.outputs.new_version }}.md', 'version_specific_results/pypi_performance_310_compilation.svg', 'version_specific_results/pypi_performance_310_execution.svg']"
          default_author: github_actions
          pull: '--rebase --autostash'

  Benchmark_311:

    runs-on: ubuntu-latest
    if: ${{ needs.Check_Pyccel_Version.outputs.old_version != needs.Check_Pyccel_Version.outputs.new_version }}
    needs: Check_Pyccel_Version

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11
      - name: Install dependencies
        uses: ./.github/actions/linux_install
      - name: Install python dependencies (numba doesn't support 3.11 yet)
        run: |
          python -m pip install --upgrade pip
          python -m pip install wheel
          python -m pip install pyccel
          python -m pip install pythran
          python -m pip install pyperf
          python -m pip install numpy
          python -m pip install matplotlib
      - name: Benchmark
        run: |
          python benchmarks/run_benchmarks.py --pyperf --verbose --no_numba
          FILE=version_specific_results/pypi_performance_311_${{needs.Check_Pyccel_Version.outputs.new_version }}.md
          echo "### Performance Comparison (as of ${{needs.Check_Pyccel_Version.outputs.new_version }})" > ${FILE}
          cat bench.out >> ${FILE}
          python analysis/plot_results_figures.py ${FILE}
        shell: bash
        working-directory: ./.
      - name: Record Failure
        run: echo "Python 3.11 benchmarks failed!" > version_specific_results/pypi_performance_311_${{needs.Check_Pyccel_Version.outputs.new_version }}.md
        if: ${{ failure() }}
      - name: Add & Commit
        if: ${{ always() }}
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update performance comparison'
          add: "['version_specific_results/pypi_performance_311_${{needs.Check_Pyccel_Version.outputs.new_version }}.md', 'version_specific_results/pypi_performance_311_compilation.svg', 'version_specific_results/pypi_performance_311_execution.svg']"
          default_author: github_actions
          pull: '--rebase --autostash'

  BuildReadme:
    runs-on: ubuntu-latest
    needs: [Check_Pyccel_Version, Benchmark_37, Benchmark_38, Benchmark_39, Benchmark_310, Benchmark_311]

    steps:
      - uses: actions/checkout@v3
      - name: Write README
        uses: ./.github/actions/create_readme
        with:
          version: needs.Check_Pyccel_Version.outputs.new_version
      - name: Save newly analysed version
        run:
          echo "${{needs.Check_Pyccel_Version.outputs.new_version }}" > current_version.txt
      - name: Add & Commit
        uses: EndBug/add-and-commit@v9
        with:
          message: 'Update README and version'
          add: "['README.md', 'current_version.txt']"
          default_author: github_actions
          pull: '--rebase --autostash'
